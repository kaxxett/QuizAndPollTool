//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("quizPollDBModel", "FK__answer__question__239E4DCF", "question", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CommonLayer.question), "answer", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CommonLayer.answer), true)]
[assembly: EdmRelationshipAttribute("quizPollDBModel", "quizQuestion", "quiz", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CommonLayer.quiz), "question", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CommonLayer.question), true)]
[assembly: EdmRelationshipAttribute("quizPollDBModel", "UserRel", "userType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CommonLayer.userType), "user", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CommonLayer.user), true)]
[assembly: EdmRelationshipAttribute("quizPollDBModel", "userQuestionAnswer", "answer", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CommonLayer.answer), "user", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CommonLayer.user))]

#endregion

namespace CommonLayer
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class quizPollDBEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new quizPollDBEntities object using the connection string found in the 'quizPollDBEntities' section of the application configuration file.
        /// </summary>
        public quizPollDBEntities() : base("name=quizPollDBEntities", "quizPollDBEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new quizPollDBEntities object.
        /// </summary>
        public quizPollDBEntities(string connectionString) : base(connectionString, "quizPollDBEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new quizPollDBEntities object.
        /// </summary>
        public quizPollDBEntities(EntityConnection connection) : base(connection, "quizPollDBEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<answer> answers
        {
            get
            {
                if ((_answers == null))
                {
                    _answers = base.CreateObjectSet<answer>("answers");
                }
                return _answers;
            }
        }
        private ObjectSet<answer> _answers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<question> questions
        {
            get
            {
                if ((_questions == null))
                {
                    _questions = base.CreateObjectSet<question>("questions");
                }
                return _questions;
            }
        }
        private ObjectSet<question> _questions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<quiz> quizs
        {
            get
            {
                if ((_quizs == null))
                {
                    _quizs = base.CreateObjectSet<quiz>("quizs");
                }
                return _quizs;
            }
        }
        private ObjectSet<quiz> _quizs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<user> users
        {
            get
            {
                if ((_users == null))
                {
                    _users = base.CreateObjectSet<user>("users");
                }
                return _users;
            }
        }
        private ObjectSet<user> _users;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<userType> userTypes
        {
            get
            {
                if ((_userTypes == null))
                {
                    _userTypes = base.CreateObjectSet<userType>("userTypes");
                }
                return _userTypes;
            }
        }
        private ObjectSet<userType> _userTypes;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the answers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToanswers(answer answer)
        {
            base.AddObject("answers", answer);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the questions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToquestions(question question)
        {
            base.AddObject("questions", question);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the quizs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToquizs(quiz quiz)
        {
            base.AddObject("quizs", quiz);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTousers(user user)
        {
            base.AddObject("users", user);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the userTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTouserTypes(userType userType)
        {
            base.AddObject("userTypes", userType);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="quizPollDBModel", Name="answer")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class answer : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new answer object.
        /// </summary>
        /// <param name="answerID">Initial value of the answerID property.</param>
        /// <param name="answer1">Initial value of the answer1 property.</param>
        /// <param name="questionID">Initial value of the questionID property.</param>
        public static answer Createanswer(global::System.Int32 answerID, global::System.String answer1, global::System.Int32 questionID)
        {
            answer answer = new answer();
            answer.answerID = answerID;
            answer.answer1 = answer1;
            answer.questionID = questionID;
            return answer;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 answerID
        {
            get
            {
                return _answerID;
            }
            set
            {
                if (_answerID != value)
                {
                    OnanswerIDChanging(value);
                    ReportPropertyChanging("answerID");
                    _answerID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("answerID");
                    OnanswerIDChanged();
                }
            }
        }
        private global::System.Int32 _answerID;
        partial void OnanswerIDChanging(global::System.Int32 value);
        partial void OnanswerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String answer1
        {
            get
            {
                return _answer1;
            }
            set
            {
                Onanswer1Changing(value);
                ReportPropertyChanging("answer1");
                _answer1 = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("answer1");
                Onanswer1Changed();
            }
        }
        private global::System.String _answer1;
        partial void Onanswer1Changing(global::System.String value);
        partial void Onanswer1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 questionID
        {
            get
            {
                return _questionID;
            }
            set
            {
                OnquestionIDChanging(value);
                ReportPropertyChanging("questionID");
                _questionID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("questionID");
                OnquestionIDChanged();
            }
        }
        private global::System.Int32 _questionID;
        partial void OnquestionIDChanging(global::System.Int32 value);
        partial void OnquestionIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("quizPollDBModel", "FK__answer__question__239E4DCF", "question")]
        public question question
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<question>("quizPollDBModel.FK__answer__question__239E4DCF", "question").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<question>("quizPollDBModel.FK__answer__question__239E4DCF", "question").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<question> questionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<question>("quizPollDBModel.FK__answer__question__239E4DCF", "question");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<question>("quizPollDBModel.FK__answer__question__239E4DCF", "question", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("quizPollDBModel", "userQuestionAnswer", "user")]
        public EntityCollection<user> users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<user>("quizPollDBModel.userQuestionAnswer", "user");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<user>("quizPollDBModel.userQuestionAnswer", "user", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="quizPollDBModel", Name="question")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class question : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new question object.
        /// </summary>
        /// <param name="questionID">Initial value of the questionID property.</param>
        /// <param name="question1">Initial value of the question1 property.</param>
        /// <param name="quizID">Initial value of the quizID property.</param>
        public static question Createquestion(global::System.Int32 questionID, global::System.String question1, global::System.Int32 quizID)
        {
            question question = new question();
            question.questionID = questionID;
            question.question1 = question1;
            question.quizID = quizID;
            return question;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 questionID
        {
            get
            {
                return _questionID;
            }
            set
            {
                if (_questionID != value)
                {
                    OnquestionIDChanging(value);
                    ReportPropertyChanging("questionID");
                    _questionID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("questionID");
                    OnquestionIDChanged();
                }
            }
        }
        private global::System.Int32 _questionID;
        partial void OnquestionIDChanging(global::System.Int32 value);
        partial void OnquestionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String question1
        {
            get
            {
                return _question1;
            }
            set
            {
                Onquestion1Changing(value);
                ReportPropertyChanging("question1");
                _question1 = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("question1");
                Onquestion1Changed();
            }
        }
        private global::System.String _question1;
        partial void Onquestion1Changing(global::System.String value);
        partial void Onquestion1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 quizID
        {
            get
            {
                return _quizID;
            }
            set
            {
                OnquizIDChanging(value);
                ReportPropertyChanging("quizID");
                _quizID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("quizID");
                OnquizIDChanged();
            }
        }
        private global::System.Int32 _quizID;
        partial void OnquizIDChanging(global::System.Int32 value);
        partial void OnquizIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> correctAnswerID
        {
            get
            {
                return _correctAnswerID;
            }
            set
            {
                OncorrectAnswerIDChanging(value);
                ReportPropertyChanging("correctAnswerID");
                _correctAnswerID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("correctAnswerID");
                OncorrectAnswerIDChanged();
            }
        }
        private Nullable<global::System.Int32> _correctAnswerID;
        partial void OncorrectAnswerIDChanging(Nullable<global::System.Int32> value);
        partial void OncorrectAnswerIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("quizPollDBModel", "FK__answer__question__239E4DCF", "answer")]
        public EntityCollection<answer> answers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<answer>("quizPollDBModel.FK__answer__question__239E4DCF", "answer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<answer>("quizPollDBModel.FK__answer__question__239E4DCF", "answer", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("quizPollDBModel", "quizQuestion", "quiz")]
        public quiz quiz
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<quiz>("quizPollDBModel.quizQuestion", "quiz").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<quiz>("quizPollDBModel.quizQuestion", "quiz").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<quiz> quizReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<quiz>("quizPollDBModel.quizQuestion", "quiz");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<quiz>("quizPollDBModel.quizQuestion", "quiz", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="quizPollDBModel", Name="quiz")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class quiz : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new quiz object.
        /// </summary>
        /// <param name="quizID">Initial value of the quizID property.</param>
        /// <param name="quizName">Initial value of the quizName property.</param>
        public static quiz Createquiz(global::System.Int32 quizID, global::System.String quizName)
        {
            quiz quiz = new quiz();
            quiz.quizID = quizID;
            quiz.quizName = quizName;
            return quiz;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 quizID
        {
            get
            {
                return _quizID;
            }
            set
            {
                if (_quizID != value)
                {
                    OnquizIDChanging(value);
                    ReportPropertyChanging("quizID");
                    _quizID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("quizID");
                    OnquizIDChanged();
                }
            }
        }
        private global::System.Int32 _quizID;
        partial void OnquizIDChanging(global::System.Int32 value);
        partial void OnquizIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String quizName
        {
            get
            {
                return _quizName;
            }
            set
            {
                OnquizNameChanging(value);
                ReportPropertyChanging("quizName");
                _quizName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("quizName");
                OnquizNameChanged();
            }
        }
        private global::System.String _quizName;
        partial void OnquizNameChanging(global::System.String value);
        partial void OnquizNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("quizPollDBModel", "quizQuestion", "question")]
        public EntityCollection<question> questions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<question>("quizPollDBModel.quizQuestion", "question");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<question>("quizPollDBModel.quizQuestion", "question", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="quizPollDBModel", Name="user")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class user : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new user object.
        /// </summary>
        /// <param name="name">Initial value of the name property.</param>
        /// <param name="surname">Initial value of the surname property.</param>
        /// <param name="username">Initial value of the username property.</param>
        /// <param name="password">Initial value of the password property.</param>
        /// <param name="userTypeID">Initial value of the userTypeID property.</param>
        public static user Createuser(global::System.String name, global::System.String surname, global::System.String username, global::System.String password, global::System.Int32 userTypeID)
        {
            user user = new user();
            user.name = name;
            user.surname = surname;
            user.username = username;
            user.password = password;
            user.userTypeID = userTypeID;
            return user;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String surname
        {
            get
            {
                return _surname;
            }
            set
            {
                OnsurnameChanging(value);
                ReportPropertyChanging("surname");
                _surname = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("surname");
                OnsurnameChanged();
            }
        }
        private global::System.String _surname;
        partial void OnsurnameChanging(global::System.String value);
        partial void OnsurnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String username
        {
            get
            {
                return _username;
            }
            set
            {
                if (_username != value)
                {
                    OnusernameChanging(value);
                    ReportPropertyChanging("username");
                    _username = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("username");
                    OnusernameChanged();
                }
            }
        }
        private global::System.String _username;
        partial void OnusernameChanging(global::System.String value);
        partial void OnusernameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String password
        {
            get
            {
                return _password;
            }
            set
            {
                OnpasswordChanging(value);
                ReportPropertyChanging("password");
                _password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("password");
                OnpasswordChanged();
            }
        }
        private global::System.String _password;
        partial void OnpasswordChanging(global::System.String value);
        partial void OnpasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 userTypeID
        {
            get
            {
                return _userTypeID;
            }
            set
            {
                OnuserTypeIDChanging(value);
                ReportPropertyChanging("userTypeID");
                _userTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("userTypeID");
                OnuserTypeIDChanged();
            }
        }
        private global::System.Int32 _userTypeID;
        partial void OnuserTypeIDChanging(global::System.Int32 value);
        partial void OnuserTypeIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("quizPollDBModel", "UserRel", "userType")]
        public userType userType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<userType>("quizPollDBModel.UserRel", "userType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<userType>("quizPollDBModel.UserRel", "userType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<userType> userTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<userType>("quizPollDBModel.UserRel", "userType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<userType>("quizPollDBModel.UserRel", "userType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("quizPollDBModel", "userQuestionAnswer", "answer")]
        public EntityCollection<answer> answers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<answer>("quizPollDBModel.userQuestionAnswer", "answer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<answer>("quizPollDBModel.userQuestionAnswer", "answer", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="quizPollDBModel", Name="userType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class userType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new userType object.
        /// </summary>
        /// <param name="userTypeID">Initial value of the userTypeID property.</param>
        /// <param name="type">Initial value of the type property.</param>
        public static userType CreateuserType(global::System.Int32 userTypeID, global::System.String type)
        {
            userType userType = new userType();
            userType.userTypeID = userTypeID;
            userType.type = type;
            return userType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 userTypeID
        {
            get
            {
                return _userTypeID;
            }
            set
            {
                if (_userTypeID != value)
                {
                    OnuserTypeIDChanging(value);
                    ReportPropertyChanging("userTypeID");
                    _userTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("userTypeID");
                    OnuserTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _userTypeID;
        partial void OnuserTypeIDChanging(global::System.Int32 value);
        partial void OnuserTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String type
        {
            get
            {
                return _type;
            }
            set
            {
                OntypeChanging(value);
                ReportPropertyChanging("type");
                _type = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("type");
                OntypeChanged();
            }
        }
        private global::System.String _type;
        partial void OntypeChanging(global::System.String value);
        partial void OntypeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("quizPollDBModel", "UserRel", "user")]
        public EntityCollection<user> users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<user>("quizPollDBModel.UserRel", "user");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<user>("quizPollDBModel.UserRel", "user", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
